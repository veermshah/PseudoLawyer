from flask import Flask, request, jsonify
import boto3
import os
from dotenv import load_dotenv
import logging

load_dotenv()

app = Flask(__name__)

# Set up logging to track what's happening in the backend
logging.basicConfig(level=logging.DEBUG)

# Initialize AWS Bedrock client
bedrock_client = boto3.client(
    'bedrock',
    region_name=os.getenv('AWS_REGION'),
    aws_access_key_id=os.getenv('AWS_ACCESS_KEY_ID'),
    aws_secret_access_key=os.getenv('AWS_SECRET_ACCESS_KEY')
)

'''

@app.route('/chat', methods=['POST'])
def chat():
    data = request.json
    user_message = data.get('message', 'No message found')
    
    # Log incoming request
    app.logger.info(f"Received message: {user_message}")

    # Simulate Bedrock interaction (use actual Bedrock logic here)
    ai_response = f"Simulated AI response for: {user_message}"
    
    # Log AI response
    app.logger.info(f"Sending AI response: {ai_response}")
    
    return jsonify({'response': ai_response})

'''

#'''

@app.route('/chat', methods=['POST'])
def chat():
    data = request.json
    user_message = data.get('message', 'No message found')
    
    # Simulate an AI response without calling Bedrock
    ai_response = f"Simulated AI response for: {user_message}"
    
    return jsonify({'response': ai_response})

    
#'''

if __name__ == '__main__':
    app.run(debug=True)
